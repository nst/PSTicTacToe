%!PS
%
% Play Tic-Tac-Toe against your printer
% 2024-04 Nicolas Seriot https://github.com/nst/PSTicTacToe
% 
% GhostScript:
% gs ttt_full.ps
% 
% Real PostScript printer:
% cat ttt_full.ps - | nc 192.168.2.10 9100

/ShowBoard {
    () =
    b 0 3 getinterval =
    b 3 3 getinterval =
    b 6 3 getinterval =
    () =
    m null ne { m = } if
} def

/numberOfFreePos { 0 b { 46 eq { 1 add } if } forall } def

/printerTriesToWinOrBlock_b_ {
    /printerHasPlayed false def

    0 1 8 {
        /i exch def
        /b2 b dup length string cvs def
        b2 i 1 getinterval (.) eq {
            [(X) (O)] {
                /p exch def

                b2 i p putinterval
                b2 _board_SomeoneHasWon_b_ {
                    b i (X) putinterval
                    /printerHasPlayed true def
                    exit
                } if
            } forall
        } if        
        printerHasPlayed { exit } if
    } for
    
    printerHasPlayed
} def

/printerPlaysRandomly {
    /x rand numberOfFreePos mod def
    /c 0 def
    0 1 b length 1 sub {
        /i exch def
        b i 1 getinterval (.) eq {
            c x eq {
                b i (X) putinterval
                exit
            } if
            /c c 1 add def
        } if
    } for
} def

/readPos_i_ {
    {
        (human turn (1-9) >) print flush
        (%lineedit) (r) file (        ) readline
           pop
        dup

        length 0 gt { 0 1 getinterval } { pop ( ) } ifelse
        
        /o exch def
                
        (123456789) o search {
            pop pop pop

            b o cvi 1 sub 1 getinterval (.) eq {
                o cvi 1 sub
                exit
            } if
        } {
            pop
        } ifelse
        
        (bad input) = ShowBoard PrintBoard
    } loop
} def

/_board_SomeoneHasWon_b_ {
    /board exch def
        
    /lines [[0 1 2] [3 4 5] [6 7 8] [0 3 6] [1 4 7] [2 5 8] [0 4 8] [2 4 6]] def

    /isOver false def

    [(O) (X)] {
        /p exch def
        lines {
            /positions exch def

            /isOver true def            
            positions {
                /pos exch def
                /isOver board pos 1 getinterval p eq isOver and def 
            } forall

            isOver { exit } if
        } forall
        isOver { exit } if
    } forall
    isOver
} def

/PrintBoard {    
    4 setlinewidth

    200 700 moveto 200 400 lineto
    300 700 moveto 300 400 lineto

    100 600 moveto 400 600 lineto
    100 500 moveto 400 500 lineto

    stroke

    0 1 b length 1 sub {
        /i exch def
        b i 1 getinterval (.) ne {
            gsave
            0 0 moveto
            100 i 3 mod 100 mul add 35 add
            700 i 3 idiv 100 mul sub 65 sub moveto
            b i 1 getinterval show
            grestore
        } if
    } for

    m null ne {
        100 300 moveto
        m show
    } if

    showpage
} def

/_s_b_checkGameState {
    /doPrint exch def
    /s7 exch def
    
    /m null def
    
    numberOfFreePos 0 eq {
        /m (TIE) def
        /doPrint true def
    } if
    
    b _board_SomeoneHasWon_b_ {
        /m (        WINS) def
        m 0 s7 putinterval
        /doPrint true def
    } if
    
    doPrint {
        ShowBoard PrintBoard
    } if
    m null ne { quit } if
} def

<< /PageSize [595 842] >> setpagedevice

/Courier findfont 48 scalefont setfont

/b (123456789) def

/m (HUMAN PLAYS O) def

ShowBoard PrintBoard

/b (.........) def

{
    /m null def
    
    b readPos_i_ (O) putinterval
    
    (  HUMAN) false _s_b_checkGameState
    
    printerTriesToWinOrBlock_b_ not {
        printerPlaysRandomly
    } if

    (PRINTER) true _s_b_checkGameState
    
} loop
